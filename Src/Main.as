package Src{	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.geom.Point;	import flash.utils.Timer;	import flash.events.TimerEvent;	import Src.com.freeactionscript.effects.explosion.Particle;	import Src.com.freeactionscript.effects.explosion.SmallExplosion;	import Src.com.freeactionscript.effects.explosion.MediumExplosion;	import Src.com.freeactionscript.effects.explosion.LargeExplosion;	import Src.com.freeactionscript.effects.explosion.AbstractExplosion;		public class Main extends MovieClip	{		private var _turret:Turrets = new Turrets();		private var _allBul:Array = new Array();		private var _cursor:Cursor = new Cursor();		private var _bulletTimer:Timer = new Timer(1000,1);		private var _Explosion:LargeExplosion;		private var _missiles:Array = new Array();		private var _allHit:Array = new Array();		private var _mSpawner:Timer = new Timer(3000);						public function Main() 		{			addChild(_turret);			addChild(_cursor);			//addChildAt(_missile,1);			_Explosion = new LargeExplosion(this);			addEvents();		}				private function addEvents():void		{			stage.addEventListener(Event.ENTER_FRAME, gameLoop);			stage.addEventListener(MouseEvent.CLICK, createBullet);			_bulletTimer.addEventListener(TimerEvent.TIMER, ShootOn);			_mSpawner.addEventListener(TimerEvent.TIMER, spawnMissile);			_mSpawner.start();		}				private function removeEvents():void		{			stage.removeEventListener(Event.ENTER_FRAME, gameLoop);			stage.removeEventListener(MouseEvent.CLICK, createBullet);			_bulletTimer.removeEventListener(TimerEvent.TIMER, ShootOn);		}				private function spawnMissile(e:TimerEvent):void		{			var mis:Missile = new Missile();			mis.Speed = (Math.floor(Math.random()*(8 - 12))+12)			mis.x = (Math.floor(Math.random()*(30 - 780))+780);			mis.y = 0;			addChildAt(mis,1);			_missiles.push(mis);					}				private function ShootOn(e:TimerEvent):void		{			stage.addEventListener(MouseEvent.CLICK, createBullet);			_bulletTimer.stop();			_bulletTimer.reset();		}				private function gameLoop(e:Event):void		{			//Turret movement			_turret.AtMouse(mouseX,mouseY);						//Explosion			_Explosion.update();						for (var l:int= 0; l < _missiles.length; l++)			{				var _missile:Missile = _missiles[l];							if(contains(_missile))				{					_missile.movement(_missile.Speed);				}											}			//Hit			for (var g:int= 0; g < _allHit.length; g++)			{				var _hitBox:HitBox = _allHit[g];																for (var p:int= 0; p < _missiles.length; p++)				{					var _missile2:Missile = _missiles[p];																if(contains(_missile2) && contains(_hitBox))					{						if(_missile2.hitTestObject(_hitBox))						{							removeChild(_missile2);						}					}				}							}			//Bullets			for (var k:int= 0; k < _allBul.length; k++)			{				var bu:Bullets = _allBul[k];																if(bu.y >= bu.cursorY)				{					bu.movement(18);					_bulletTimer.start();				}								if(bu.y <= bu.cursorY && contains(bu))				{					_Explosion.create(bu.cursorX, bu.cursorY)					var _hB:HitBox = new HitBox();					var _hitTimer:Timer = new Timer(950,1)					_hitTimer.addEventListener(TimerEvent.TIMER, removeHit);					_hB.x = bu.cursorX;					_hB.y = bu.cursorY;					addChildAt(_hB,1);					_allHit.push(_hB);					_hitTimer.start();										function removeHit(e:TimerEvent):void					{						_hitTimer.reset();						removeChild(_hB);						_allBul.splice(_allBul.indexOf(bu),1);						_hitTimer.removeEventListener(TimerEvent.TIMER, removeHit);					}							removeChild(bu);					for (var r:int= 0; r < _missiles.length; r++)					{						var _missile3:Missile = _missiles[r];										if(contains(_missile3))						{							if(_allBul[k].hitTestObject(_missile3))								{								removeChild(_missile3);							}						}					}																			}								if(bu.y < -300)				{					removeChild(bu);					_allBul.splice(_allBul.indexOf(bu),1);				}			}												//Cursor movement			_cursor.x = mouseX;			_cursor.y = mouseY;					}				private function createBullet(e:MouseEvent):void		{			var bu:Bullets = new Bullets();						bu.cursorX = mouseX;			bu.cursorY = mouseY;						bu.x = _turret.x;			bu.y = _turret.y;			bu.rotation = _turret.rotation;			addChild(bu);			_allBul.push(bu);						stage.removeEventListener(MouseEvent.CLICK, createBullet);		}	}	}